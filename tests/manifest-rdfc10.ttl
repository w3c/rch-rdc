## RDF Dataset Canonicalization tests
## Distributed under both the W3C Test Suite License[1] and the W3C 3-
## clause BSD License[2]. To contribute to a W3C Test Suite, see the
## policies and contribution forms [3]
##
## 1. http://www.w3.org/Consortium/Legal/2008/04-testsuite-license
## 2. http://www.w3.org/Consortium/Legal/2008/03-bsd-license
## 3. http://www.w3.org/2004/10/27-testcases
##
## This file is generated automatciallly from manifest.csv, and should not be edited directly.
##
## Test types
## * rdfc:RDFC10EvalTest  - Canonicalization using RDFC-1.0

@prefix : <manifest-rdfc10#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:   <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix rdfc: <https://w3c.github.io/rdf-canon/tests/vocab#> .
@prefix rdft: <http://www.w3.org/ns/rdftest#> .

<manifest-rdfc10>  a mf:Manifest ;

  rdfs:label "RDF Dataset Canonicalization (RDFC-1.0)";
  rdfs:comment "Tests the 1.0 version of RDF Dataset Canonicalization.";
  mf:entries (
    :test001 :test002 :test003 :test004 :test005 :test006 :test008 :test009 :test010 :test011
    :test013 :test014 :test016 :test017 :test018 :test019 :test020 :test021 :test022 :test023
    :test024 :test025 :test026 :test027 :test028 :test029 :test030 :test033 :test034 :test035
    :test036 :test038 :test039 :test040 :test043 :test044 :test045 :test046 :test047 :test048
    :test053 :test054 :test055 :test056 :test057 :test058 :test059 :test060 :test061 :test062
    :test063 :test064 :test065 :test066 :test067 :test068 :test069 :test070 :test071 :test072
    :test073
  ) .

:test001 a rdfc:RDFC10EvalTest;
  mf:name "simple id";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test001-in.nq>;
  mf:result <rdfc10/test001-rdfc10.nq>;
  .

:test002 a rdfc:RDFC10EvalTest;
  mf:name "duplicate property iri values";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test002-in.nq>;
  mf:result <rdfc10/test002-rdfc10.nq>;
  .

:test003 a rdfc:RDFC10EvalTest;
  mf:name "bnode";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test003-in.nq>;
  mf:result <rdfc10/test003-rdfc10.nq>;
  .

:test004 a rdfc:RDFC10EvalTest;
  mf:name "bnode plus embed w/subject";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test004-in.nq>;
  mf:result <rdfc10/test004-rdfc10.nq>;
  .

:test005 a rdfc:RDFC10EvalTest;
  mf:name "bnode embed";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test005-in.nq>;
  mf:result <rdfc10/test005-rdfc10.nq>;
  .

:test006 a rdfc:RDFC10EvalTest;
  mf:name "multiple rdf types";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test006-in.nq>;
  mf:result <rdfc10/test006-rdfc10.nq>;
  .

:test008 a rdfc:RDFC10EvalTest;
  mf:name "single subject complex";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test008-in.nq>;
  mf:result <rdfc10/test008-rdfc10.nq>;
  .

:test009 a rdfc:RDFC10EvalTest;
  mf:name "multiple subjects - complex";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test009-in.nq>;
  mf:result <rdfc10/test009-rdfc10.nq>;
  .

:test010 a rdfc:RDFC10EvalTest;
  mf:name "type";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test010-in.nq>;
  mf:result <rdfc10/test010-rdfc10.nq>;
  .

:test011 a rdfc:RDFC10EvalTest;
  mf:name "type-coerced type";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test011-in.nq>;
  mf:result <rdfc10/test011-rdfc10.nq>;
  .

:test013 a rdfc:RDFC10EvalTest;
  mf:name "type-coerced type, cycle";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test013-in.nq>;
  mf:result <rdfc10/test013-rdfc10.nq>;
  .

:test014 a rdfc:RDFC10EvalTest;
  mf:name "check types";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test014-in.nq>;
  mf:result <rdfc10/test014-rdfc10.nq>;
  .

:test016 a rdfc:RDFC10EvalTest;
  mf:name "blank node - dual link - embed";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test016-in.nq>;
  mf:result <rdfc10/test016-rdfc10.nq>;
  .

:test017 a rdfc:RDFC10EvalTest;
  mf:name "blank node - dual link - non-embed";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test017-in.nq>;
  mf:result <rdfc10/test017-rdfc10.nq>;
  .

:test018 a rdfc:RDFC10EvalTest;
  mf:name "blank node - self link";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test018-in.nq>;
  mf:result <rdfc10/test018-rdfc10.nq>;
  .

:test019 a rdfc:RDFC10EvalTest;
  mf:name "blank node - disjoint self links";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test019-in.nq>;
  mf:result <rdfc10/test019-rdfc10.nq>;
  .

:test020 a rdfc:RDFC10EvalTest;
  mf:name "blank node - diamond";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test020-in.nq>;
  mf:result <rdfc10/test020-rdfc10.nq>;
  .

:test021 a rdfc:RDFC10EvalTest;
  mf:name "blank node - circle of 2";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test021-in.nq>;
  mf:result <rdfc10/test021-rdfc10.nq>;
  .

:test022 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 2";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test022-in.nq>;
  mf:result <rdfc10/test022-rdfc10.nq>;
  .

:test023 a rdfc:RDFC10EvalTest;
  mf:name "blank node - circle of 3";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test023-in.nq>;
  mf:result <rdfc10/test023-rdfc10.nq>;
  .

:test024 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (0-1-2)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test024-in.nq>;
  mf:result <rdfc10/test024-rdfc10.nq>;
  .

:test025 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (0-2-1)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test025-in.nq>;
  mf:result <rdfc10/test025-rdfc10.nq>;
  .

:test026 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (1-0-2)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test026-in.nq>;
  mf:result <rdfc10/test026-rdfc10.nq>;
  .

:test027 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (1-2-0)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test027-in.nq>;
  mf:result <rdfc10/test027-rdfc10.nq>;
  .

:test028 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (2-1-0)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test028-in.nq>;
  mf:result <rdfc10/test028-rdfc10.nq>;
  .

:test029 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (2-0-1)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test029-in.nq>;
  mf:result <rdfc10/test029-rdfc10.nq>;
  .

:test030 a rdfc:RDFC10EvalTest;
  mf:name "blank node - point at circle of 3";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test030-in.nq>;
  mf:result <rdfc10/test030-rdfc10.nq>;
  .

:test033 a rdfc:RDFC10EvalTest;
  mf:name "disjoint identical subgraphs (1)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test033-in.nq>;
  mf:result <rdfc10/test033-rdfc10.nq>;
  .

:test034 a rdfc:RDFC10EvalTest;
  mf:name "disjoint identical subgraphs (2)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test034-in.nq>;
  mf:result <rdfc10/test034-rdfc10.nq>;
  .

:test035 a rdfc:RDFC10EvalTest;
  mf:name "reordered w/strings (1)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test035-in.nq>;
  mf:result <rdfc10/test035-rdfc10.nq>;
  .

:test036 a rdfc:RDFC10EvalTest;
  mf:name "reordered w/strings (2)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test036-in.nq>;
  mf:result <rdfc10/test036-rdfc10.nq>;
  .

:test038 a rdfc:RDFC10EvalTest;
  mf:name "reordered 4 bnodes, reordered 2 properties (1)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test038-in.nq>;
  mf:result <rdfc10/test038-rdfc10.nq>;
  .

:test039 a rdfc:RDFC10EvalTest;
  mf:name "reordered 4 bnodes, reordered 2 properties (2)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test039-in.nq>;
  mf:result <rdfc10/test039-rdfc10.nq>;
  .

:test040 a rdfc:RDFC10EvalTest;
  mf:name "reordered 6 bnodes (1)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test040-in.nq>;
  mf:result <rdfc10/test040-rdfc10.nq>;
  .

:test043 a rdfc:RDFC10EvalTest;
  mf:name "literal with language";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test043-in.nq>;
  mf:result <rdfc10/test043-rdfc10.nq>;
  .

:test044 a rdfc:RDFC10EvalTest;
  mf:name "evil (1)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test044-in.nq>;
  mf:result <rdfc10/test044-rdfc10.nq>;
  .

:test045 a rdfc:RDFC10EvalTest;
  mf:name "evil (2)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test045-in.nq>;
  mf:result <rdfc10/test045-rdfc10.nq>;
  .

:test046 a rdfc:RDFC10EvalTest;
  mf:name "evil (3)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test046-in.nq>;
  mf:result <rdfc10/test046-rdfc10.nq>;
  .

:test047 a rdfc:RDFC10EvalTest;
  mf:name "deep diff (1)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test047-in.nq>;
  mf:result <rdfc10/test047-rdfc10.nq>;
  .

:test048 a rdfc:RDFC10EvalTest;
  mf:name "deep diff (2)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test048-in.nq>;
  mf:result <rdfc10/test048-rdfc10.nq>;
  .

:test053 a rdfc:RDFC10EvalTest;
  mf:name "@list";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test053-in.nq>;
  mf:result <rdfc10/test053-rdfc10.nq>;
  .

:test054 a rdfc:RDFC10EvalTest;
  mf:name "t-graph";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test054-in.nq>;
  mf:result <rdfc10/test054-rdfc10.nq>;
  .

:test055 a rdfc:RDFC10EvalTest;
  mf:name "simple reorder (1)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test055-in.nq>;
  mf:result <rdfc10/test055-rdfc10.nq>;
  .

:test056 a rdfc:RDFC10EvalTest;
  mf:name "simple reorder (2)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test056-in.nq>;
  mf:result <rdfc10/test056-rdfc10.nq>;
  .

:test057 a rdfc:RDFC10EvalTest;
  mf:name "unnamed graph";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test057-in.nq>;
  mf:result <rdfc10/test057-rdfc10.nq>;
  .

:test058 a rdfc:RDFC10EvalTest;
  mf:name "unnamed graph with blank node objects";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test058-in.nq>;
  mf:result <rdfc10/test058-rdfc10.nq>;
  .

:test059 a rdfc:RDFC10EvalTest;
  mf:name "n-quads parsing";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test059-in.nq>;
  mf:result <rdfc10/test059-rdfc10.nq>;
  .

:test060 a rdfc:RDFC10EvalTest;
  mf:name "n-quads escaping";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test060-in.nq>;
  mf:result <rdfc10/test060-rdfc10.nq>;
  .

:test061 a rdfc:RDFC10EvalTest;
  mf:name "same literal value with multiple languages";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test061-in.nq>;
  mf:result <rdfc10/test061-rdfc10.nq>;
  .

:test062 a rdfc:RDFC10EvalTest;
  mf:name "same literal value with multiple datatypes";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test062-in.nq>;
  mf:result <rdfc10/test062-rdfc10.nq>;
  .

:test063 a rdfc:RDFC10EvalTest;
  mf:name "blank node - diamond (with _:b)";
  rdfs:comment "This duplicates #test020, but uses _:b as a blank node prefix";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test063-in.nq>;
  mf:result <rdfc10/test063-rdfc10.nq>;
  .

:test064 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (0-1-2, reversed)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test064-in.nq>;
  mf:result <rdfc10/test064-rdfc10.nq>;
  .

:test065 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (0-2-1, reversed)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test065-in.nq>;
  mf:result <rdfc10/test065-rdfc10.nq>;
  .

:test066 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (1-0-2, reversed)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test066-in.nq>;
  mf:result <rdfc10/test066-rdfc10.nq>;
  .

:test067 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (1-2-0, reversed)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test067-in.nq>;
  mf:result <rdfc10/test067-rdfc10.nq>;
  .

:test068 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (2-1-0, reversed)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test068-in.nq>;
  mf:result <rdfc10/test068-rdfc10.nq>;
  .

:test069 a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (2-0-1, reversed)";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test069-in.nq>;
  mf:result <rdfc10/test069-rdfc10.nq>;
  .

:test070 a rdfc:RDFC10EvalTest;
  mf:name "dataset - isomorphic default and iri named";
  rdfs:comment "Isomorphic graphs in default and IRI named graph";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test070-in.nq>;
  mf:result <rdfc10/test070-rdfc10.nq>;
  .

:test071 a rdfc:RDFC10EvalTest;
  mf:name "dataset - isomorphic default and node named";
  rdfs:comment "Isomorphic graphs in default and blank node named graph";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test071-in.nq>;
  mf:result <rdfc10/test071-rdfc10.nq>;
  .

:test072 a rdfc:RDFC10EvalTest;
  mf:name "dataset - shared blank nodes";
  rdfs:comment "Blank nodes shared in default and named graph";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test072-in.nq>;
  mf:result <rdfc10/test072-rdfc10.nq>;
  .

:test073 a rdfc:RDFC10EvalTest;
  mf:name "dataset - referencing graph name";
  rdfs:comment "Default graph with blank node shared with graph name";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test073-in.nq>;
  mf:result <rdfc10/test073-rdfc10.nq>;
  .
