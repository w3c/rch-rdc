## RDF Dataset Canonicalization tests
## Distributed under both the W3C Test Suite License[1] and the W3C 3-
## clause BSD License[2]. To contribute to a W3C Test Suite, see the
## policies and contribution forms [3]
##
## 1. http://www.w3.org/Consortium/Legal/2008/04-testsuite-license
## 2. http://www.w3.org/Consortium/Legal/2008/03-bsd-license
## 3. http://www.w3.org/2004/10/27-testcases
##
## This file is generated automatciallly from manifest.csv, and should not be edited directly.
##
## Test types
## * rdfc:RDFC10EvalTest – Canonicalization using RDFC-1.0
## * rdfc:RDFC10MapTest  – RDFC-1.0 Issued Identifiers Test

@prefix : <manifest#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:   <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix rdfc: <https://w3c.github.io/rdf-canon/tests/vocab#> .
@prefix rdft: <http://www.w3.org/ns/rdftest#> .

<manifest>  a mf:Manifest ;

  rdfs:label "RDF Dataset Canonicalization (RDFC-1.0) Test Suite";
  rdfs:comment "Tests the 1.0 version of RDF Dataset Canonicalization and the generation of canonical maps.";
  mf:entries (
    :test001c :test002c :test003c :test003m :test004c :test004m :test005c :test005m
    :test006c :test008c :test009c :test010c :test011c :test013c :test014c :test016c
    :test016m :test017c :test017m :test018c :test018m :test019c :test020c :test020m
    :test021c :test022c :test023c :test024c :test025c :test026c :test027c :test028c
    :test029c :test030c :test030m :test033c :test034c :test035c :test036c :test038c
    :test039c :test040c :test043c :test044c :test045c :test046c :test047c :test047m
    :test048c :test048m :test053c :test053m :test054c :test055c :test055m :test056c
    :test056m :test057c :test057m :test058c :test059c :test060c :test060m :test061c
    :test062c :test063c :test063m :test064c :test065c :test066c :test067c :test068c
    :test069c :test070c :test070m :test071c :test071m :test072c :test072m :test073c
    :test073m :test074c
  ) .

:test001c a rdfc:RDFC10EvalTest;
  mf:name "simple id";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test001-in.nq>;
  mf:result <rdfc10/test001-rdfc10.nq>;
  .

:test002c a rdfc:RDFC10EvalTest;
  mf:name "duplicate property iri values";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test002-in.nq>;
  mf:result <rdfc10/test002-rdfc10.nq>;
  .

:test003c a rdfc:RDFC10EvalTest;
  mf:name "bnode";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test003-in.nq>;
  mf:result <rdfc10/test003-rdfc10.nq>;
  .

:test003m a rdfc:RDFC10MapTest;
  mf:name "bnode (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test003-in.nq>;
  mf:result <rdfc10/test003-rdfc10map.json>;
  .

:test004c a rdfc:RDFC10EvalTest;
  mf:name "bnode plus embed w/subject";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test004-in.nq>;
  mf:result <rdfc10/test004-rdfc10.nq>;
  .

:test004m a rdfc:RDFC10MapTest;
  mf:name "bnode plus embed w/subject (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test004-in.nq>;
  mf:result <rdfc10/test004-rdfc10map.json>;
  .

:test005c a rdfc:RDFC10EvalTest;
  mf:name "bnode embed";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test005-in.nq>;
  mf:result <rdfc10/test005-rdfc10.nq>;
  .

:test005m a rdfc:RDFC10MapTest;
  mf:name "bnode embed (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test005-in.nq>;
  mf:result <rdfc10/test005-rdfc10map.json>;
  .

:test006c a rdfc:RDFC10EvalTest;
  mf:name "multiple rdf types";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test006-in.nq>;
  mf:result <rdfc10/test006-rdfc10.nq>;
  .

:test008c a rdfc:RDFC10EvalTest;
  mf:name "single subject complex";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test008-in.nq>;
  mf:result <rdfc10/test008-rdfc10.nq>;
  .

:test009c a rdfc:RDFC10EvalTest;
  mf:name "multiple subjects - complex";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test009-in.nq>;
  mf:result <rdfc10/test009-rdfc10.nq>;
  .

:test010c a rdfc:RDFC10EvalTest;
  mf:name "type";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test010-in.nq>;
  mf:result <rdfc10/test010-rdfc10.nq>;
  .

:test011c a rdfc:RDFC10EvalTest;
  mf:name "type-coerced type";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test011-in.nq>;
  mf:result <rdfc10/test011-rdfc10.nq>;
  .

:test013c a rdfc:RDFC10EvalTest;
  mf:name "type-coerced type, cycle";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test013-in.nq>;
  mf:result <rdfc10/test013-rdfc10.nq>;
  .

:test014c a rdfc:RDFC10EvalTest;
  mf:name "check types";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test014-in.nq>;
  mf:result <rdfc10/test014-rdfc10.nq>;
  .

:test016c a rdfc:RDFC10EvalTest;
  mf:name "blank node - dual link - embed";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test016-in.nq>;
  mf:result <rdfc10/test016-rdfc10.nq>;
  .

:test016m a rdfc:RDFC10MapTest;
  mf:name "blank node - dual link - embed (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test016-in.nq>;
  mf:result <rdfc10/test016-rdfc10map.json>;
  .

:test017c a rdfc:RDFC10EvalTest;
  mf:name "blank node - dual link - non-embed";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test017-in.nq>;
  mf:result <rdfc10/test017-rdfc10.nq>;
  .

:test017m a rdfc:RDFC10MapTest;
  mf:name "blank node - dual link - non-embed (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test017-in.nq>;
  mf:result <rdfc10/test017-rdfc10map.json>;
  .

:test018c a rdfc:RDFC10EvalTest;
  mf:name "blank node - self link";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test018-in.nq>;
  mf:result <rdfc10/test018-rdfc10.nq>;
  .

:test018m a rdfc:RDFC10MapTest;
  mf:name "blank node - self link (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test018-in.nq>;
  mf:result <rdfc10/test018-rdfc10map.json>;
  .

:test019c a rdfc:RDFC10EvalTest;
  mf:name "blank node - disjoint self links";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test019-in.nq>;
  mf:result <rdfc10/test019-rdfc10.nq>;
  .

:test020c a rdfc:RDFC10EvalTest;
  mf:name "blank node - diamond";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test020-in.nq>;
  mf:result <rdfc10/test020-rdfc10.nq>;
  .

:test020m a rdfc:RDFC10MapTest;
  mf:name "blank node - diamond (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test020-in.nq>;
  mf:result <rdfc10/test020-rdfc10map.json>;
  .

:test021c a rdfc:RDFC10EvalTest;
  mf:name "blank node - circle of 2";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test021-in.nq>;
  mf:result <rdfc10/test021-rdfc10.nq>;
  .

:test022c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 2";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test022-in.nq>;
  mf:result <rdfc10/test022-rdfc10.nq>;
  .

:test023c a rdfc:RDFC10EvalTest;
  mf:name "blank node - circle of 3";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test023-in.nq>;
  mf:result <rdfc10/test023-rdfc10.nq>;
  .

:test024c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (0-1-2)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test024-in.nq>;
  mf:result <rdfc10/test024-rdfc10.nq>;
  .

:test025c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (0-2-1)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test025-in.nq>;
  mf:result <rdfc10/test025-rdfc10.nq>;
  .

:test026c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (1-0-2)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test026-in.nq>;
  mf:result <rdfc10/test026-rdfc10.nq>;
  .

:test027c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (1-2-0)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test027-in.nq>;
  mf:result <rdfc10/test027-rdfc10.nq>;
  .

:test028c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (2-1-0)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test028-in.nq>;
  mf:result <rdfc10/test028-rdfc10.nq>;
  .

:test029c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (2-0-1)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test029-in.nq>;
  mf:result <rdfc10/test029-rdfc10.nq>;
  .

:test030c a rdfc:RDFC10EvalTest;
  mf:name "blank node - point at circle of 3";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test030-in.nq>;
  mf:result <rdfc10/test030-rdfc10.nq>;
  .

:test030m a rdfc:RDFC10MapTest;
  mf:name "blank node - point at circle of 3 (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test030-in.nq>;
  mf:result <rdfc10/test030-rdfc10map.json>;
  .

:test033c a rdfc:RDFC10EvalTest;
  mf:name "disjoint identical subgraphs (1)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test033-in.nq>;
  mf:result <rdfc10/test033-rdfc10.nq>;
  .

:test034c a rdfc:RDFC10EvalTest;
  mf:name "disjoint identical subgraphs (2)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test034-in.nq>;
  mf:result <rdfc10/test034-rdfc10.nq>;
  .

:test035c a rdfc:RDFC10EvalTest;
  mf:name "reordered w/strings (1)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test035-in.nq>;
  mf:result <rdfc10/test035-rdfc10.nq>;
  .

:test036c a rdfc:RDFC10EvalTest;
  mf:name "reordered w/strings (2)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test036-in.nq>;
  mf:result <rdfc10/test036-rdfc10.nq>;
  .

:test038c a rdfc:RDFC10EvalTest;
  mf:name "reordered 4 bnodes, reordered 2 properties (1)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test038-in.nq>;
  mf:result <rdfc10/test038-rdfc10.nq>;
  .

:test039c a rdfc:RDFC10EvalTest;
  mf:name "reordered 4 bnodes, reordered 2 properties (2)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test039-in.nq>;
  mf:result <rdfc10/test039-rdfc10.nq>;
  .

:test040c a rdfc:RDFC10EvalTest;
  mf:name "reordered 6 bnodes (1)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test040-in.nq>;
  mf:result <rdfc10/test040-rdfc10.nq>;
  .

:test043c a rdfc:RDFC10EvalTest;
  mf:name "literal with language";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test043-in.nq>;
  mf:result <rdfc10/test043-rdfc10.nq>;
  .

:test044c a rdfc:RDFC10EvalTest;
  mf:name "poison – evil (1)";
  rdfs:comment "A poison graph which is computable given defined limits.";
  rdfc:computationalComplexity "high";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test044-in.nq>;
  mf:result <rdfc10/test044-rdfc10.nq>;
  .

:test045c a rdfc:RDFC10EvalTest;
  mf:name "poison – evil (2)";
  rdfs:comment "A poison graph which is computable given defined limits.";
  rdfc:computationalComplexity "high";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test045-in.nq>;
  mf:result <rdfc10/test045-rdfc10.nq>;
  .

:test046c a rdfc:RDFC10EvalTest;
  mf:name "poison – evil (3)";
  rdfs:comment "A poison graph which is computable given defined limits.";
  rdfc:computationalComplexity "high";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test046-in.nq>;
  mf:result <rdfc10/test046-rdfc10.nq>;
  .

:test047c a rdfc:RDFC10EvalTest;
  mf:name "deep diff (1)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test047-in.nq>;
  mf:result <rdfc10/test047-rdfc10.nq>;
  .

:test047m a rdfc:RDFC10MapTest;
  mf:name "deep diff (1) (map test)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test047-in.nq>;
  mf:result <rdfc10/test047-rdfc10map.json>;
  .

:test048c a rdfc:RDFC10EvalTest;
  mf:name "deep diff (2)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test048-in.nq>;
  mf:result <rdfc10/test048-rdfc10.nq>;
  .

:test048m a rdfc:RDFC10MapTest;
  mf:name "deep diff (2) (map test)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test048-in.nq>;
  mf:result <rdfc10/test048-rdfc10map.json>;
  .

:test053c a rdfc:RDFC10EvalTest;
  mf:name "@list";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test053-in.nq>;
  mf:result <rdfc10/test053-rdfc10.nq>;
  .

:test053m a rdfc:RDFC10MapTest;
  mf:name "@list (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test053-in.nq>;
  mf:result <rdfc10/test053-rdfc10map.json>;
  .

:test054c a rdfc:RDFC10EvalTest;
  mf:name "t-graph";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test054-in.nq>;
  mf:result <rdfc10/test054-rdfc10.nq>;
  .

:test055c a rdfc:RDFC10EvalTest;
  mf:name "simple reorder (1)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test055-in.nq>;
  mf:result <rdfc10/test055-rdfc10.nq>;
  .

:test055m a rdfc:RDFC10MapTest;
  mf:name "simple reorder (1) (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test055-in.nq>;
  mf:result <rdfc10/test055-rdfc10map.json>;
  .

:test056c a rdfc:RDFC10EvalTest;
  mf:name "simple reorder (2)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test056-in.nq>;
  mf:result <rdfc10/test056-rdfc10.nq>;
  .

:test056m a rdfc:RDFC10MapTest;
  mf:name "simple reorder (2) (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test056-in.nq>;
  mf:result <rdfc10/test056-rdfc10map.json>;
  .

:test057c a rdfc:RDFC10EvalTest;
  mf:name "unnamed graph";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test057-in.nq>;
  mf:result <rdfc10/test057-rdfc10.nq>;
  .

:test057m a rdfc:RDFC10MapTest;
  mf:name "unnamed graph (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test057-in.nq>;
  mf:result <rdfc10/test057-rdfc10map.json>;
  .

:test058c a rdfc:RDFC10EvalTest;
  mf:name "unnamed graph with blank node objects";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test058-in.nq>;
  mf:result <rdfc10/test058-rdfc10.nq>;
  .

:test059c a rdfc:RDFC10EvalTest;
  mf:name "n-quads parsing";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test059-in.nq>;
  mf:result <rdfc10/test059-rdfc10.nq>;
  .

:test060c a rdfc:RDFC10EvalTest;
  mf:name "n-quads escaping";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test060-in.nq>;
  mf:result <rdfc10/test060-rdfc10.nq>;
  .

:test060m a rdfc:RDFC10MapTest;
  mf:name "n-quads escaping (map test)";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test060-in.nq>;
  mf:result <rdfc10/test060-rdfc10map.json>;
  .

:test061c a rdfc:RDFC10EvalTest;
  mf:name "same literal value with multiple languages";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test061-in.nq>;
  mf:result <rdfc10/test061-rdfc10.nq>;
  .

:test062c a rdfc:RDFC10EvalTest;
  mf:name "same literal value with multiple datatypes";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test062-in.nq>;
  mf:result <rdfc10/test062-rdfc10.nq>;
  .

:test063c a rdfc:RDFC10EvalTest;
  mf:name "blank node - diamond (with _:b)";
  rdfs:comment "This duplicates #test020, but uses _:b as a blank node prefix";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test063-in.nq>;
  mf:result <rdfc10/test063-rdfc10.nq>;
  .

:test063m a rdfc:RDFC10MapTest;
  mf:name "blank node - diamond (with _:b) (map test)";
  rdfs:comment "This duplicates #test020, but uses _:b as a blank node prefix";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test063-in.nq>;
  mf:result <rdfc10/test063-rdfc10map.json>;
  .

:test064c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (0-1-2, reversed)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test064-in.nq>;
  mf:result <rdfc10/test064-rdfc10.nq>;
  .

:test065c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (0-2-1, reversed)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test065-in.nq>;
  mf:result <rdfc10/test065-rdfc10.nq>;
  .

:test066c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (1-0-2, reversed)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test066-in.nq>;
  mf:result <rdfc10/test066-rdfc10.nq>;
  .

:test067c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (1-2-0, reversed)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test067-in.nq>;
  mf:result <rdfc10/test067-rdfc10.nq>;
  .

:test068c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (2-1-0, reversed)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test068-in.nq>;
  mf:result <rdfc10/test068-rdfc10.nq>;
  .

:test069c a rdfc:RDFC10EvalTest;
  mf:name "blank node - double circle of 3 (2-0-1, reversed)";
  rdfc:computationalComplexity "medium";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test069-in.nq>;
  mf:result <rdfc10/test069-rdfc10.nq>;
  .

:test070c a rdfc:RDFC10EvalTest;
  mf:name "dataset - isomorphic default and iri named";
  rdfs:comment "Isomorphic graphs in default and IRI named graph";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test070-in.nq>;
  mf:result <rdfc10/test070-rdfc10.nq>;
  .

:test070m a rdfc:RDFC10MapTest;
  mf:name "dataset - isomorphic default and iri named (map test)";
  rdfs:comment "Isomorphic graphs in default and IRI named graph";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test070-in.nq>;
  mf:result <rdfc10/test070-rdfc10map.json>;
  .

:test071c a rdfc:RDFC10EvalTest;
  mf:name "dataset - isomorphic default and node named";
  rdfs:comment "Isomorphic graphs in default and blank node named graph";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test071-in.nq>;
  mf:result <rdfc10/test071-rdfc10.nq>;
  .

:test071m a rdfc:RDFC10MapTest;
  mf:name "dataset - isomorphic default and node named (map test)";
  rdfs:comment "Isomorphic graphs in default and blank node named graph";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test071-in.nq>;
  mf:result <rdfc10/test071-rdfc10map.json>;
  .

:test072c a rdfc:RDFC10EvalTest;
  mf:name "dataset - shared blank nodes";
  rdfs:comment "Blank nodes shared in default and named graph";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test072-in.nq>;
  mf:result <rdfc10/test072-rdfc10.nq>;
  .

:test072m a rdfc:RDFC10MapTest;
  mf:name "dataset - shared blank nodes (map test)";
  rdfs:comment "Blank nodes shared in default and named graph";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test072-in.nq>;
  mf:result <rdfc10/test072-rdfc10map.json>;
  .

:test073c a rdfc:RDFC10EvalTest;
  mf:name "dataset - referencing graph name";
  rdfs:comment "Default graph with blank node shared with graph name";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test073-in.nq>;
  mf:result <rdfc10/test073-rdfc10.nq>;
  .

:test073m a rdfc:RDFC10MapTest;
  mf:name "dataset - referencing graph name (map test)";
  rdfs:comment "Default graph with blank node shared with graph name";
  rdfc:computationalComplexity "low";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test073-in.nq>;
  mf:result <rdfc10/test073-rdfc10map.json>;
  .

:test074c a rdfc:RDFC10NegativeEvalTest;
  mf:name "poison - Clique Graph (negative test)";
  rdfs:comment "A 10-node Clique of blank node resources all inter-related.";
  rdfc:computationalComplexity "high";
  rdft:approval rdft:Proposed;
  mf:action <rdfc10/test074-in.nq>;
  .
